#include <stdio.h>
void getArray();
int calculate();
int binarysearch();
int main() {
    int times;
    scanf("%d",&times);
    while(times!=0)
    {
        int n;
        scanf("%d",&n);
        int arr[n];
        getArray(arr,n);
        int value;
        scanf("%d",&value);
        int index=calculate(arr,n,value);
        printf("%d ",index);
        printf("\n");
        times--;
    }
    return 0;
}

void getArray(int arr[],int n){
    for(int i=0;i<n;i++)
        scanf("%d",&arr[i]);
}
int calculate(int arr[],int n,int value){
    int index=0;
    for(int i=0;i<n;i++){
        if(arr[i]<arr[i+1])
            index++;
        else break;
    }
    int brr[index+1],crr[n-index-1],result;
    for(int i=0;i<index+1;i++)
        brr[i]=arr[i];
    for(int i=0;i<n-index-1;i++)
        crr[i]=arr[i+index+1];

        result=binarysearch(brr,0,index,value);

    if(result==1) return result;
    else if (result==-1)
        result=binarysearch(crr,0,n-index-1-1,value);

    return index+result+1;

}
int binarysearch(int arr[],int start,int end,int value){
    if(start<=end){
        int mid=(start+end)/2;
        if(arr[mid]==value)
            return mid;
        else if(arr[mid]<value)
        {
            if(arr[start]<=arr[end])
                return binarysearch(arr,mid+1,end,value);
            else return binarysearch(arr,start,mid,value);
        }
        else
        {
            if(arr[start]<arr[end])
                return binarysearch(arr,start,mid,value);
            else return binarysearch(arr,mid+1,end,value);
        }
    } return -1;

}
